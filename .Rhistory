}
dat = data.matrix(Data)[,1:2]
K = 10
lam_max = find_lambda(dat)/1.5;
Lam = sapply(1:K, function(i) i/K*lam_max)
res = Find_sol_path(dat,Lam)
dat = data.matrix(Data)[,1:2]
K = 10
lam_max = find_lambda(dat)/1.5;
Lam = sapply(1:K, function(i) i/K*lam_max)
res = cpaint(dat,Lam)
clres = decide_cluster(list(res[[1]][K,],res[[2]][K,]), thr = 1e-6)
dat = data.matrix(Data)[,1:2]
K = 10
lam_max = find_lambda(dat)/1.5;
Lam = sapply(1:K, function(i) i/K*lam_max)
res = cpaint(dat,Lam)
clres = decide_cluster(list(res[[1]][K,],res[[2]][K,]), thr = 1e-6)
document()
library(dpcc)
dat = data.matrix(Data)[,1:2]
K = 10
lam_max = find_lambda(dat)/1.5;
Lam = sapply(1:K, function(i) i/K*lam_max)
res = cpaint(dat,Lam)
clres = decide_cluster(list(res[[1]][K,],res[[2]][K,]), thr = 1e-6)
plot(clres$hclust)
df.paths <- data.frame(x = dat[,1],y = dat[,2], group=1:n)
for (j in 1:K) {
x <- res[[1]][j,]
y <- res[[2]][j,]
df <- data.frame(x=x, y=y, group=1:n)
df.paths <- rbind(df.paths,df)
}
dat = data.frame(
x = dat[,1],
y = dat[,2],
cluster = factor(clres$clust)
)
ggplot(dat, aes(x = x, y = y, col = cluster)) +
geom_path(data = df.paths, aes(x = x, y = y, group=group),colour='grey60',alpha = 0.2) +
geom_point(size = 0.8, show.legend = FALSE) +
theme(axis.text = element_text(size=16),
axis.title.x = element_blank(),
axis.title.y = element_blank())
ggplot(dat, aes(x = x, y = y, col = cluster)) +
geom_path(data = df.paths, aes(x = x, y = y, group=group),colour='grey60',alpha = 0.2) +
geom_point(size = 0.8, show.legend = FALSE)
dat = data.matrix(Data)[,1:2]
K = 10
lam_max = find_lambda(dat)/1.5;
Lam = sapply(1:K, function(i) i/K*lam_max)
res = cpaint(dat,Lam)
clres = decide_cluster(list(res[[1]][K,],res[[2]][K,]), thr = 1e-6)
plot(clres$hclust)
df.paths <- data.frame(x = dat[,1],y = dat[,2], group=1:n)
for (j in 1:K) {
x <- res[[1]][j,]
y <- res[[2]][j,]
df <- data.frame(x=x, y=y, group=1:n)
df.paths <- rbind(df.paths,df)
}
dat = data.frame(
x = dat[,1],
y = dat[,2],
cluster = factor(clres$clust)
)
ggplot(dat, aes(x = x, y = y, col = cluster)) +
geom_path(data = df.paths, aes(x = x, y = y, group=group),colour='grey60',alpha = 0.2) +
geom_point(size = 0.8, show.legend = FALSE) +
theme(axis.text = element_text(size=10))
ggplot(dat, aes(x = x, y = y, col = cluster)) +
geom_path(data = df.paths, aes(x = x, y = y, group=group),colour='grey60',alpha = 0.2) +
geom_point(size = 1, show.legend = FALSE)
ggplot(Data,aes(x,y,color=factor(clusters))) +
geom_point(size = 1, show.legend = FALSE)
dat = data.matrix(Data)[,1:2]
K = 10
lam_max = find_lambda(dat)/1.5;
Lam = sapply(1:K, function(i) i/K*lam_max)
res = cpaint(dat,Lam)
clres = decide_cluster(list(res[[1]][K,],res[[2]][K,]), thr = 1e-6)
plot(clres$hclust)
df.paths <- data.frame(x = dat[,1],y = dat[,2], group=1:n)
for (j in 1:K) {
x <- res[[1]][j,]
y <- res[[2]][j,]
df <- data.frame(x=x, y=y, group=1:n)
df.paths <- rbind(df.paths,df)
}
path_sol = data.frame(
x = dat[,1],
y = dat[,2],
cluster = factor(clres$clust)
)
ggplot(path_sol, aes(x = x, y = y, col = cluster)) +
geom_path(data = df.paths, aes(x = x, y = y, group=group),colour='grey60',alpha = 0.2) +
geom_point(size = 1, show.legend = FALSE)
plot(clres$hclust, xlab = "samples", ylab = "lambda")
clres$hclust
?plot
plclust(clres$hclust)
rect.hclust(clres$hclust, k = 3)
help("Deprecated")
library(stats)
rect.hclust(clres$hclust, k = 3)
plclust(clres$hclust, k = 3)
plclust(clres$hclust)
plot(clres$hclust, k = 3)
plot(clres$hclust, hang = lam_max)
lam_max
plot(clres$hclust, hang = lam_max)
plot(clres$cl, hang = lam_max)
plot(clres$cl)
?cutree
library(graphics)
plot(clres$cl)
plot(clres$hclust)
dat = data.matrix(Data)[,1:2]
K = 10
lam_max = find_lambda(dat)/1.5;
Lam = sapply(1:K, function(i) i/K*lam_max)
res = cpaint(dat,Lam)
df.paths <- data.frame(x = dat[,1],y = dat[,2], group=1:n)
for (j in 1:K) {
x <- res[[1]][j,]
y <- res[[2]][j,]
df <- data.frame(x=x, y=y, group=1:n)
df.paths <- rbind(df.paths,df)
}
ggplot(Data, aes(x = x, y = y, col = cluster)) +
geom_path(data = df.paths, aes(x = x, y = y, group=group),colour='grey60',alpha = 0.2) +
geom_point(size = 1, show.legend = FALSE)
dat = data.matrix(Data)[,1:2]
K = 10
lam_max = find_lambda(dat)/1.5;
Lam = sapply(1:K, function(i) i/K*lam_max)
res = cpaint(dat,Lam)
df.paths <- data.frame(x = dat[,1],y = dat[,2], group=1:n)
for (j in 1:K) {
x <- res[[1]][j,]
y <- res[[2]][j,]
df <- data.frame(x=x, y=y, group=1:n)
df.paths <- rbind(df.paths,df)
}
ggplot(Data, aes(x = x, y = y, col = clusters)) +
geom_path(data = df.paths, aes(x = x, y = y, group=group),colour='grey60',alpha = 0.2) +
geom_point(size = 1, show.legend = FALSE)
set.seed(12)
n = 50
error = matrix(rnorm(n*2,sd = 1.4),n,2)
which=sample(1:3, n, replace=TRUE)
xmean = matrix(rnorm(3*2,sd = 11),3,2)
tb1 = error + xmean[which,]
Data = data.frame(
x = scale(tb1[,1]),
y = scale(tb1[,2]),
clusters = factor(which)
)
ggplot(Data,aes(x,y,color=factor(clusters))) +
geom_point(size = 1, show.legend = FALSE)
set.seed(12)
n = 50
error = matrix(rnorm(n*2,sd = 1.4),n,2)
which=sample(1:3, n, replace=TRUE)
xmean = matrix(rnorm(3*2,sd = 11),3,2)
tb1 = error + xmean[which,]
Data = data.frame(
x = scale(tb1[,1]),
y = scale(tb1[,2]),
clusters = factor(which)
)
ggplot(Data,aes(x,y,color=factor(clusters))) +
geom_point(size = 2, show.legend = FALSE)
dat = data.matrix(Data)[,1:2]
K = 10
lam_max = find_lambda(dat)/1.5;
Lam = sapply(1:K, function(i) i/K*lam_max)
res = cpaint(dat,Lam)
df.paths <- data.frame(x = dat[,1],y = dat[,2], group=1:n)
for (j in 1:K) {
x <- res[[1]][j,]
y <- res[[2]][j,]
df <- data.frame(x=x, y=y, group=1:n)
df.paths <- rbind(df.paths,df)
}
ggplot(Data, aes(x = x, y = y, col = clusters)) +
geom_path(data = df.paths, aes(x = x, y = y, group=group),colour='grey60',alpha = 1) +
geom_point(size = 2, show.legend = FALSE)
dat = data.matrix(Data)[,1:2]
K = 10
lam_max = find_lambda(dat)/1.5;
Lam = sapply(1:K, function(i) i/K*lam_max)
res = cpaint(dat,Lam)
df.paths <- data.frame(x = dat[,1],y = dat[,2], group=1:n)
for (j in 1:K) {
x <- res[[1]][j,]
y <- res[[2]][j,]
df <- data.frame(x=x, y=y, group=1:n)
df.paths <- rbind(df.paths,df)
}
ggplot(Data, aes(x = x, y = y, col = clusters)) +
geom_path(data = df.paths, aes(x = x, y = y, group=group),colour='grey60',alpha = 0.6) +
geom_point(size = 2, show.legend = FALSE)
dat = data.matrix(Data)[,1:2]
K = 10
lam_max = find_lambda(dat)/1.5;
Lam = sapply(1:K, function(i) i/K*lam_max)
res = cpaint(dat,Lam)
df.paths <- data.frame(x = dat[,1],y = dat[,2], group=1:n)
for (j in 1:K) {
x <- res[[1]][j,]
y <- res[[2]][j,]
df <- data.frame(x=x, y=y, group=1:n)
df.paths <- rbind(df.paths,df)
}
ggplot(Data, aes(x = x, y = y, col = clusters)) +
geom_path(data = df.paths, aes(x = x, y = y, group=group),colour='grey60',alpha = 0.5) +
geom_point(size = 2, show.legend = FALSE)
document()
document()
library(dpcc)
set.seed(12)
n = 50
error = matrix(rnorm(n*2,sd = 1.4),n,2)
which=sample(1:3, n, replace=TRUE)
xmean = matrix(rnorm(3*2,sd = 11),3,2)
tb1 = error + xmean[which,]
data = data.frame(
x = scale(tb1[,1]),
y = scale(tb1[,2]),
clusters = factor(which)
)
ggplot(data,aes(x,y,color=factor(clusters))) +
geom_point(size = 2, show.legend = FALSE)
dat = data.matrix(data)[,1:2]
K = 10
lam_max = find_lambda(dat)/1.5;
Lam = sapply(1:K, function(i) i/K*lam_max)
res = cpaint(dat,Lam)
df.paths <- data.frame(x = dat[,1],y = dat[,2], group=1:n)
for (j in 1:K) {
x <- res[[1]][j,]
y <- res[[2]][j,]
df <- data.frame(x=x, y=y, group=1:n)
df.paths <- rbind(df.paths,df)
}
ggplot(data, aes(x = x, y = y, col = clusters)) +
geom_path(data = df.paths, aes(x = x, y = y, group=group),colour='grey60',alpha = 0.5) +
geom_point(size = 2, show.legend = FALSE)
library(ggplot2)
check()
library(devtools
)
check()
library(dpcc)
check()
x = rnorm(10)
c_dp(x)
cdp(x)
typeof(x)
nrow(x)
is.vector(x)
cdp = function(X,lam) {
if(is.vector(X)){
res = c()
y = sort(X)
ord = order(X)
res_t = C_dp(y,lam)
res[ord] = res_t
}
if(is.matrix(X)){
p = ncol(X)
res = list()
for (i in 1:p) {
y = sort(X[,i])
ord = order(X[,i])
res_t = C_dp(y,lam)
res[[i]] = rep(0,length(ord))
res[[i]][ord] = res_t
}
}
return(res)
}
cdp(x)
cdp(x,0.002)
flsa::flsa(x,lambda1 = 0.002)
flsa::flsa(x,lambda2 = 0.002)
x
flsa::flsa(x,lambda2 = 0.2)
cdp(x,0.2)
cdp(x,0.2)
n = 10
y = rnorm(n)
lam = 0.02
connList <- vector("list", n)
class(connList) = "connListObj"
for (i in 1:n) {
connList[[i]] = as.integer(seq(0,n-1,1)[-i])
}
res00 = cdp(y,lam)
res0 = as.vector(flsa(y, lambda2 = lam, thr = 1e-5, connListObj = connList, splitCheckSize = 1))
sum(round(res00,4) != round(res0,4))
res0 = as.vector(flsa::flsa(y, lambda2 = lam, thr = 1e-5, connListObj = connList, splitCheckSize = 1))
sum(round(res00,4) != round(res0,4))
res00;
res0
lam = 0.2
res00 = cdp(y,lam)
res0 = as.vector(flsa::flsa(y, lambda2 = lam, thr = 1e-5, connListObj = connList, splitCheckSize = 1))
res00;
res0
lam = 0.05
res00 = cdp(y,lam)
res0 = as.vector(flsa::flsa(y, lambda2 = lam, thr = 1e-5, connListObj = connList, splitCheckSize = 1))
sum(round(res00,4) != round(res0,4))
res00;
res0
lam = 0.1
connList <- vector("list", n)
class(connList) = "connListObj"
for (i in 1:n) {
connList[[i]] = as.integer(seq(0,n-1,1)[-i])
}
res00 = cdp(y,lam)
res0 = as.vector(flsa::flsa(y, lambda2 = lam, thr = 1e-5, connListObj = connList, splitCheckSize = 1))
sum(round(res00,4) != round(res0,4))
res00;
res0
res0 = flsa::flsa(y, lambda2 = lam, thr = 1e-5, connListObj = connList, splitCheckSize = 1)
res00;
is.vector(res0)
is.list(res0)
typeof(res0)
is.matrix(res0)
lam = c(0.1,0.05)
res0 = flsa::flsa(y, lambda2 = lam, thr = 1e-5, connListObj = connList, splitCheckSize = 1)
res0
cpaint= function(X,lam) {
k = length(lam)
res = list()
if(is.matrix(X)){
p = ncol(X)
for (i in 1:p) {
y = sort(X[,i])
ord = order(X[,i])
res_temp = NULL
for (j in 1:k) {
res_t = rep(0,length(ord))
res_t[ord] = C_paint(y,lam[j])
res_temp = rbind(res_temp,res_t)
}
row.names(res_temp) <- paste("lam", 1:k, sep = "")
res[[i]] = res_temp
}
names(res) <- paste("dim", 1:p, sep = "")
}
if(is.vector(x)){
y = sort(X)
ord = order(X)
res_temp = NULL
for (j in 1:k) {
res_t = rep(0,length(ord))
res_t[ord] = C_paint(y,lam[j])
res_temp = rbind(res_temp,res_t)
}
row.names(res_temp) <- paste("lam", 1:k, sep = "")
res[[1]] = res_temp
}
return(res)
}
res00 = cpaint(y,lam)
res00;
res00;
res0
n = 10
p = 2
y = matrix(rnorm(n*p), nrow=n, ncol=p)
lam = c(0.1,0.05)
lam = c(0.05, 0.1)
res00 = cpaint(y,lam)
res00;
cpaint= function(X,lam) {
k = length(lam)
res = list()
if(is.matrix(X)){
p = ncol(X)
for (i in 1:p) {
y = sort(X[,i])
ord = order(X[,i])
res_temp = NULL
for (j in 1:k) {
res_t = rep(0,length(ord))
res_t[ord] = C_paint(y,lam[j])
res_temp = rbind(res_temp,res_t)
}
row.names(res_temp) <- paste("lam", 1:k, sep = "")
res[[i]] = res_temp
}
names(res) <- paste("dim", 1:p, sep = "")
}
if(is.vector(X)){
y = sort(X)
ord = order(X)
res_temp = NULL
for (j in 1:k) {
res_t = rep(0,length(ord))
res_t[ord] = C_paint(y,lam[j])
res_temp = rbind(res_temp,res_t)
}
row.names(res_temp) <- paste("lam", 1:k, sep = "")
res[[1]] = res_temp
}
return(res)
}
res00 = cpaint(y,lam)
res00;
document()
document()
library(dpcc)
n = 10
p = 2
y = matrix(rnorm(n*p), nrow=n, ncol=p)
lam = c(0.05, 0.1)
res00 = cpaint(y,lam)
res00;
res = cpaint(dat,Lam)
library(ggplot2)
set.seed(12)
n = 50
error = matrix(rnorm(n*2,sd = 1.4),n,2)
which=sample(1:3, n, replace=TRUE)
xmean = matrix(rnorm(3*2,sd = 11),3,2)
tb1 = error + xmean[which,]
data = data.frame(
x = scale(tb1[,1]),
y = scale(tb1[,2]),
clusters = factor(which)
)
ggplot(data,aes(x,y,color=factor(clusters))) +
geom_point(size = 2, show.legend = FALSE)
dat = data.matrix(data)[,1:2]
K = 10
lam_max = find_lambda(dat)/1.5;
Lam = sapply(1:K, function(i) i/K*lam_max)
Lam
res = cpaint(dat,Lam)
df.paths <- data.frame(x = dat[,1],y = dat[,2], group=1:n)
for (j in 1:K) {
df <- data.frame(x=res[[1]][j,], y=res[[2]][j,], group=1:n)
df.paths <- rbind(df.paths,df)
}
ggplot() +
geom_path(data = df.paths, aes(x = x, y = y, group=group), colour='grey60', alpha = 0.5) +
geom_point(data, aes(x = x, y = y, col = clusters), size = 2, show.legend = FALSE)
res = cpaint(dat,Lam)
df.paths <- data.frame(x = dat[,1],y = dat[,2], group=1:n)
for (j in 1:K) {
df <- data.frame(x=res[[1]][j,], y=res[[2]][j,], group=1:n)
df.paths <- rbind(df.paths,df)
}
ggplot(data) +
geom_path(data = df.paths, aes(x = x, y = y, group=group), colour='grey60', alpha = 0.5) +
geom_point(aes(x = x, y = y, col = clusters), size = 2, show.legend = FALSE)
ggplot(data) +
geom_path(data = df.paths, aes(x = x, y = y, group=group), colour='grey60', alpha = 0.5) +
geom_point(aes(x = x, y = y, col = clusters), size = 2)
document()
library(dpcc)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/2021/2021ind/C-PAINT/UAI-response/R-package-dpcc/dpcc")
?cpaint
X = matrix(rnorm(10*2), 10, 2)
# set the biggest lambda in the sequence.
lam_max = find_lambda(X)
# set the length of the sequence.
K = 10
# equally separate the sequence with K.
Lam = sapply(1:K, function(i) i/K*lam_max)
cpaint(X,Lam)
?cdp
X = matrix(rnorm(10*2), 10, 2)
lam = find_lambda(X)/2
# set a tuning parameter lambda.
cdp(X, lam)
document()
library(dpcc)
?dp()
?dp
?cdp
?cpaint
document()
library(dpcc)
X = matrix(rnorm(10*2), 10, 2)
lam = find_lambda(X)/2
# set a tuning parameter lambda.
cdp(X, lam)
# generate a data matrix with n = 10 and p = 2.
X = matrix(rnorm(1e5*2), 1e5, 2)
lam = find_lambda(X)/2
# set a tuning parameter lambda.
system.time(cdp(X, lam))
document()
devtools::document()
library(dpcc)
check()
library(devtools)
check()
document
document()
check()
?cdp
?cpaint
